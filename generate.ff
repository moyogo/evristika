/* Copyright (C) 2008-2010 Andrey V. Panov
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

fontname=$1
bdfname=$2
SetPref("InstructDiagonalStems",1)
SetPref("InstructSerifs",1)
SetPref("InstructBallTerminals",1)
SetPref("InterpolateStrongPoints",1)
SetPref("CounterControl",1)
SetPref("PreferSpacingAccents",0)
Open(fontname+".sfd")
cursive = $italicangle != 0
Reencode("unicode")
SelectSingletons(0u409,0u40A,0u42A,0u42E,0u449,0u44A,0u44E,0u459,0u45A,0u462,0u463,0u472,0u473)
SelectMoreSingletons(0u492,0u493,0u497,0u49B,0u4A3,0u4BE,0u4BF,0u4F7)
SelectMore(0u4B0,0u4B3)
SelectMoreSingletons(0u26E,0u2A1)
UnlinkReference()
Select(0u401,0u4FF)
SelectMoreSingletons(0u255,0u26B,0u26C,0u26E,0u278,0u291,0u2A1,"Euro")
if (fontname == "Heuristica-Regular")
 SelectMore("afii10018.sc","afii10049.sc")
 SelectMore("A.sc","Z.sc")
endif
RemoveOverlap()
RoundToInt()
Simplify()
CanonicalContours()
CanonicalStart()
if ($italicangle != 0)
 AddLookup("Italic substitutions", "gsub_single", 0, [["locl",[["cyrl",["MKD ","SRB "]]]]])
 AddLookupSubtable("Italic substitutions", "Italic substitutions cyr")
 Select("afii10068") # Cyrillic g
 AddPosSub("Italic substitutions cyr","ghe.ital") # afii10063
 Select("afii10069") # Cyrillic g
 AddPosSub("Italic substitutions cyr","de.ital") # afii10063
 Select("afii10081") # Cyrillic p
 AddPosSub("Italic substitutions cyr","pe.ital") # afii10831
 Select("afii10084") # Cyrillic t
 AddPosSub("Italic substitutions cyr","te.ital") # afii10832
endif
# AddLookup("Latin ligatures", "gsub_ligature", 0, [["liga",[["latn",["dflt"]]]]])
# AddLookupSubtable("Latin ligatures", "Latin ligatures subtable")
# Select("fi") 
# AddPosSub("Latin ligatures subtable","f i")
 
if (cursive)
 h_offset = -12
else
 h_offset = 0
endif
add_ipa.ff(h_offset,cursive)
same_cyrext.ff()
SelectWorthOutputting()
DefaultUseMyMetrics()
SelectNone()
combining.ff()
anchors.ff()
spaces_dashes.ff()
case_sub.ff()
add_accented.ff()
same_kern.ff(cursive)
make_kern.ff(cursive)
if (fontname == "Heuristica-Regular")
# sc_sub.ff()
 same_kern_sc.ff()
 make_kern_sc.ff()
endif
liga_sub.ff()
#dub_glyph.ff("quoteleft","quotereversed")
#dub_glyph.ff("quotedblleft","uni201F")
## import BDF files
/*
i = 10
while (i < 25)
 #Print("font-adobe-utopia-75dpi-1.0.1/"+bdfname+ToString(i)+".bdf")
 if (!FileAccess("font-adobe-utopia-75dpi-1.0.1/"+bdfname+ToString(i)+".bdf"))
  Import("font-adobe-utopia-75dpi-1.0.1/"+bdfname+ToString(i)+".bdf")
 endif
 if (!FileAccess("font-adobe-utopia-100dpi-1.0.1/"+bdfname+ToString(i)+".bdf"))
  Import("font-adobe-utopia-100dpi-1.0.1/"+bdfname+ToString(i)+".bdf")
 endif
 i++
endloop
*/
#Save(fontname+"_.sfd")
Generate(fontname+".otf","ttf",0x200A00,-1)
#Reencode("AdobeStandardEncoding")
Generate(fontname+".pfb","",0xa00021)
SetFontOrder(2)
SelectGlyphsBoth()
#SelectMoreSingletons("i","j")
#SelectWorthOutputting()
UnlinkReference()
SelectWorthOutputting()
#Simplify()
RoundToInt()
CanonicalContours()
CanonicalStart()
#SelectWorthOutputting()
#SelectAll()
AutoInstr()
Save(fontname+"_.sfd")
Generate(fontname+".gen.ttf","ttf",0xA00,-1)
